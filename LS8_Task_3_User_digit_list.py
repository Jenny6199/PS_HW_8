""" Author Maksim Sapunov msdir6199@gmail.com 30/01/2021"""

# 3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
# Проверить работу исключения на реальном примере.
# Необходимо запрашивать у пользователя данные и заполнять список.
# Класс-исключение должен контролировать типы данных элементов списка.
# Примечание: длина списка не фиксирована.
# Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу скрипта, введя, например,
# команду “stop”.
# При этом скрипт завершается, сформированный список выводится на экран.
# Подсказка: для данного задания примем, что пользователь может вводить только числа и строки.
# При вводе пользователем очередного элемента необходимо реализовать проверку типа элемента и вносить его в список,
# только если введено число.
# Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить соответствующее сообщение.
# При этом работа скрипта не должна завершаться.

import re


class WrongInput(Exception):
    """ Обработка исключения с учетом условия учебной задачи """

    def __init__(self, text):
        self.text = text


def user_make_digit_list():
    """
    Реализовано заполнение пользователем списка чисел и проверка данных перед записью.
    При ошибочном вводе вызывается исключение.
    :return digit_list: list - список с числами введенных пользователем
    """
    print('В настоящий момент список пуст. '
          'Необходимо заполнить список целыми числами. Ввод данных может быть любой +/-, '
          'но будут сохранены только числа.',
          '\nДля завершения ввода и вывода на экран данных введите stop.')
    data = ''
    digits_list = []
    while data != 'stop'.lower():
        data = input('Введите данные, по завершении нажмите Enter (или введите stop для завершения): ')
        if data == 'stop'.lower():
            break  # Чтобы исключить прохождение цикла после ввода STOP
        try:
            result = re.match(r'[-]\d+|\d+', data)
            if result is None:
                raise WrongInput(f'Какая-то абракадабра - {data}. Ошибочный ввод. Попробуйте еще раз.')
            else:
                print(f'В список будет добавлено число {result.group(0)}')
                digits_list.append(int(result.group(0)))
        except WrongInput as err:
            print(err)
    return digits_list


print(user_make_digit_list())
